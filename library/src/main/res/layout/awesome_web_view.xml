<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/coordinatorLayout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/finestWhite">

    <FrameLayout
        android:id="@+id/webLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginTop="@dimen/toolbarHeight" />

    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appBar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:elevation="0dp">

        <androidx.appcompat.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:padding="0dp"
            app:contentInsetEnd="0dp"
            app:contentInsetLeft="0dp"
            app:contentInsetRight="0dp"
            app:contentInsetStart="0dp">

            <include layout="@layout/toolbar_content" />
        </androidx.appcompat.widget.Toolbar>
    </com.google.android.material.appbar.AppBarLayout>

    <View
        android:id="@+id/gradient"
        android:layout_width="match_parent"
        android:layout_height="@dimen/defaultDividerHeight"
        android:layout_marginTop="@dimen/toolbarHeight"
        android:background="@color/finestBlack10" />

    <ProgressBar
        android:id="@+id/progressBar"
        style="?android:attr/progressBarStyleHorizontal"
        android:layout_width="match_parent"
        android:layout_height="@dimen/defaultProgressBarHeight"
        android:layout_marginTop="@dimen/toolbarHeight"
        android:indeterminate="false"
        android:progressDrawable="@drawable/progress_drawable" />

    <include layout="@layout/menus" />

    <!-- View where the video will be shown when video goes fullscreen -->
    <RelativeLayout
        android:id="@+id/videoLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@android:color/black"
        android:visibility="invisible">

        <!-- View that will be shown while the fullscreen video loads. For example you could include
        a "Loading..." message. However, in this particular example this view is actually defined in
        view_loading_video.xml and inflated programmatically in ExampleActivity.java. The reason for
        this is to keep the main layout (this file) cleaner. -->
        <!-- <View
            android:id="@+id/videoLoading"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_centerInParent="true"
            android:visibility="invisible" /> -->

    </RelativeLayout>

</androidx.coordinatorlayout.widget.CoordinatorLayout>
